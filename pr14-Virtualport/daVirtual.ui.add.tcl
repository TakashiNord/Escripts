# interface generated by
#
# Подключаем 2-а пакета: для работы с деревом + для подключения к БД через ODBC
package require tclodbc

proc SelectMaxIDFromTable { table_name } {
  set max_cnt -1;
  set str0 "select max(id) from $table_name ";
  set r0 [ db $str0 ]
  foreach {y} $r0 {
    set max_cnt [lindex $y 0] ;
	#set max_cnt [ expr $max_cnt+1]
  }
  return $max_cnt
}

#=============================================
proc da_dev_virtual2 { tns usr pwd fsql} {
#=============================================
# глобальный список, куда пишем все результаты
# --

# Устанавливаем соединение к БД
  database db $tns $usr $pwd
#db set autocommit off

# Устанавливаем РОЛЬ
# по умолчанию = BASE_EXT_CONNECT_OIK CONNECT => SBOR_STAND_READ = (SELECT = da_dev_desc )  BASE_STAND_READ
  if {$usr!="rsduadmin"} {
    db "SET ROLE SBOR_STAND_READ , BASE_STAND_READ"
    db "select * from session_roles"
  }

# Шаг 0. Создаем и описываем в Навигаторе БД - структуру приборов и присоединяем Профили.
# -- Шаги 1 и 2 пропускаем. Они предназначены для большей информативности.
# Шаг 1. DA_DEV - Получаем id профиля
  set id_dev 6800001 ;
# Шаг 2. DA_DEV_DESC - Получаем список всех элементов в профиле
  set str1 "select * from da_dev_desc where id_parent=%ld and id_gtopt>=1 " ;
  set res1 [ format $str1 $id_dev ]
# Шаг 3. DA_SOURCE - Получаем id всех необходимых каналов . Принимаем : первый в списке - канал 'по-умолчанию'=основной.
  #аналоговые
  set id_channel_anal [list 11 12 13 14]
  #бул
  set id_channel_bool [list 15 16 17 18]
  #
# Шаг 5. DA_SLAVE - Получаем id_node виртуального канала
  set id_node 6100148 ;
# Шаг 6. DA_PARAM - Получаем id всех элементов привязанных к виртуальному каналу
  set str2 "select id, name from da_param where id_node=%ld" ;

  set str2 "select dp.id , dp.name, dd.id_proto_point , dd.id_dev , dd.id_parent ,  dd.cvalif , dd.id_type, sys_gtyp.define_alias \
from da_param dp, da_dev_desc dd, sys_dtyp , sys_gtyp \
where dp.id_node=%ld and dp.id_point=dd.id  \
      and sys_dtyp.id=dd.id_type and sys_dtyp.id_gtype=sys_gtyp.id \
order by sys_gtyp.define_alias"

  set res2 [ format $str2 $id_node ]

# Шаг 7. DA_SRC_CHANNEL - устанавливаем  соответствие Id(параметр)=id(канал)+устанавливаем приоритет 0
  set strSql71 "insert into DA_SRC_CHANNEL (id, id_ownlst, id_source, alias, priority) values(%ld, %ld, %ld, '%s', %ld) ;"
# Шаг 7. DA_VAL - устанавливаем источник по-умолчанию  Id(параметр)=id(канал)
  set strSql72 "insert into DA_VAL (id_param,ID_CUR_CHANNEL_SRC) values(%ld,DECODE(%ld, 0, NULL, %ld)) ;"
# Шаг 7. DA_ARC - устанавливаем запись архива (если нужно)
  set strSql73 "insert into DA_ARC (id_param,ID_GTOPT,RETFNAME,ID_GINFO) values(%ld,%ld,'%s',%ld) ;"
# Шаг 7. DA_SRC_CHANNEL_TUNE - связываем канал с таблицей источником
  set strSql74 "insert into DA_SRC_CHANNEL_TUNE (id, ID_CHANNEL,id_srctbl,id_srclst) VALUES(%ld,%ld,%ld,%ld) ;"
# =================================
# Основной алгоритм

  set t1 [ clock format [ clock seconds ] -format "_%Y%m%d-%H%M%S" ]
  set ext [ file extension $fsql ]
  set namefile1 [ file rootname $fsql ]
  set namefile $namefile1$t1$ext

  set df [ open $namefile "w+"] ;

  set cnt 0 ; # число выводимых элементов, для контроля

  set id_channel [ ] ; # список для каналов

  # set _max1 [ SelectMaxIDFromTable DA_SRC_CHANNEL ] ;
  set max_cnt -1;
  foreach {y} [ db "select max(id) from DA_SRC_CHANNEL " ] {
    set max_cnt [lindex $y 0] ;
  }
  set _max1 $max_cnt
  puts $df "--  ----DA_SRC_CHANNEL = $_max1" ;

  # set _max2 [ SelectMaxIDFromTable DA_SRC_CHANNEL_TUNE ] ;
  set max_cnt -1;
  foreach {y} [ db "select max(id) from DA_SRC_CHANNEL_TUNE " ] {
    set max_cnt [lindex $y 0] ;
  }
  set _max2 $max_cnt
  puts $df "--  ----DA_SRC_CHANNEL_TUNE = $_max2" ;

  set y2 [ db $res2 ]
  foreach {y} $y2 {
	set id_ownlst [lindex $y 0] ;
	set nm [lindex $y 1]

	set cnt [ expr $cnt + 1 ]
	puts $df "--  ----$cnt" ;

	set comment "";
	set num 0 ;

	# - устанавливаем комментарий для тех, кто уже есть
	set str01 "select count(*) from DA_SRC_CHANNEL where id_ownlst=$id_ownlst ";
	set y3 [ db $str01 ]
	foreach {yt} $y3 {
	  set num [ lindex $yt 0 ]
	}
	if {$num>0} {
	   set comment "-- " ;

	   set s1 [ format "%s  '%s'  %s  %s  %s" $id_ownlst $nm [lindex $y 3] [lindex $y 5] [lindex $y 7] ]
	   puts $df "$comment $comment$comment$s1" ;

	   foreach {yt} [ db "select * from DA_SRC_CHANNEL where id_ownlst=$id_ownlst " ] {
		  set tid [lindex $yt 0] ;
		  set tid_ownlst [lindex $yt 1] ;
		  set tid_source [lindex $yt 2] ;
		  set talias [lindex $yt 3] ;
		  set tpriority [lindex $yt 4] ;
		  set s1 [ format $strSql71 $tid $tid_ownlst $tid_source $talias $tpriority ]
		  puts $df "$comment $comment$s1" ;
	   }
	   set tid -1 ;
	   foreach {yt} [ db "select * from DA_VAL where id_param=$id_ownlst " ] {
		  set tid_param [lindex $yt 0] ;
		  set tid [lindex $yt 1] ;
		  set s2 [ format $strSql72 $tid_param $tid $tid ]
	      puts $df "$comment $comment$s2" ;
	   }
	   if {$tid>=0} {
	     foreach {yt} [ db "select * from DA_SRC_CHANNEL_TUNE where id_channel=$tid " ] {
		    set tid [lindex $yt 0] ;
		    set tid_channel [lindex $yt 1] ;
		    set tid_srctbl [lindex $yt 2] ;
		    set tid_srclst [lindex $yt 3] ;
		    set s3 [ format $strSql74 $tid $tid_channel $tid_srctbl $tid_srclst ]
	        puts $df "$comment $comment$s3" ;
	     }
	   }

	   continue ; # элемент уже есть в описываемых таблицах, обрываем цикл и идем к след элементу.
    }

	# увеличиваем счетчик для индексации - на число добавленных каналов
	set len [llength $id_channel] ;
	if {$len==0} { set len 1 }
	set _max1 [ expr $_max1 + $len ]
	set id $_max1

	set alias 'Канал' ;
	set priority  0 ;

	# выбираем список каналов? взависимости от типа параметра
	set id_channel $id_channel_bool ;
	set dalias [lindex $y 7 ] ;
    switch $dalias {
        "GLOBAL_TYPE_ANALOG" {
          set id_channel $id_channel_anal ;
        }
        "GLOBAL_TYPE_DIGIT" {
          set id_channel $id_channel_anal ;
        }
        "GLOBAL_TYPE_DANALOG" {
          set id_channel $id_channel_anal ;
        }
        "GLOBAL_TYPE_DDIGIT" {
          set id_channel $id_channel_anal ;
        }
        "GLOBAL_TYPE_COMMAND" {
          set id_channel $id_channel_anal ;
        }
        default {  ;  }
    }

	puts $df "-- ----$id  $nm" ;

	# Формируем строки Insert для DA_SRC_CHANNEL
	set i 0
	foreach {x} $id_channel {
	  	set id_source $x ;
		set _id [ expr $id + $i ]
		set s1 [ format $strSql71 $_id $id_ownlst $id_source $alias $priority ]
		set i [ expr $i + 1 ]
		puts $df $comment$s1 ;
	}

	# Формируем строки Insert для DA_VAL
	set ID_CUR_CHANNEL_SRC $id
	set s2 [ format $strSql72 $id_ownlst $ID_CUR_CHANNEL_SRC $ID_CUR_CHANNEL_SRC ]
	puts $df $comment$s2 ;

	# Формируем строки Insert для DA_SRC_CHANNEL_TUNE
	set _max2 [ expr $_max2 + 1 ]
	set s3 [ format $strSql74 $_max2 $id 0 0 ]
	puts $df $comment$3 ;

	puts $df "--" ;

  }

  flush $df ; close $df  ;
# =================================

 # Закрываем соединение к БД
  db disconnect ;

  return 0 ;
}


 global   tcl_platform
#============================ задаем константы
  set tns "rsdu2"
  set usr "rsduadmin" ; #  admin  nov_ema
  set pwd "passme" ; # passme  qwertyqaz
  set nameFile "da_virtual_add.sql" ; # имя файла для сохранения результата
#=============================================

  set t1 [ clock format [ clock seconds ] -format "%T" ]
  puts "\nstart = $t1\n"

  set ls {} ; #[ list ]

  set ret [ da_dev_virtual2 $tns $usr $pwd $nameFile ]

  set t1 [ clock format [ clock seconds ] -format "%T" ]
  puts "\nend = $t1"


